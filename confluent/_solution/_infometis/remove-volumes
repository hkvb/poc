#!/usr/bin/env bash



  ######################################################
  # THIS FILE IS AUTO-GENERATED - PLEASE DO NOT CHANGE #
  ######################################################

#!/usr/bin/env bash

executionplane --silent docker container prune --force
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__connect_secrets_volume"
	result=$(docker volume ls | grep "hkvb_poc_confluent__connect_secrets_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__connect_connect_secrets_volume"
	result=$(docker volume ls | grep "hkvb_poc_confluent__connect_connect_secrets_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__connect_data_volume"
	result=$(docker volume ls | grep "hkvb_poc_confluent__connect_data_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__connect_jars_volume"
	result=$(docker volume ls | grep "hkvb_poc_confluent__connect_jars_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__kafka_secrets_volume"
	result=$(docker volume ls | grep "hkvb_poc_confluent__kafka_secrets_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__kafka_data_volume"
	result=$(docker volume ls | grep "hkvb_poc_confluent__kafka_data_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__ksqldb_queries_volume"
	result=$(docker volume ls | grep "hkvb_poc_confluent__ksqldb_queries_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__schema_registry_secrets_volume"
	result=$(docker volume ls | grep "hkvb_poc_confluent__schema_registry_secrets_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__zookeeper_secrets_volume"
	result=$(docker volume ls | grep "hkvb_poc_confluent__zookeeper_secrets_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__zookeeper_data_volume"
	result=$(docker volume ls | grep "hkvb_poc_confluent__zookeeper_data_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__zookeeper_log_volume"
	result=$(docker volume ls | grep "hkvb_poc_confluent__zookeeper_log_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
#!/usr/bin/env bash

executionplane --silent docker container prune --force
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__metrics_overlay_config"
	result=$(docker volume ls | grep "hkvb_poc_confluent__metrics_overlay_config")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
continue="true"
while [[ "true" == "$continue" ]] ;
do
	executionplane docker volume rm "hkvb_poc_confluent__metrics_overlay_volume"
	result=$(docker volume ls | grep "hkvb_poc_confluent__metrics_overlay_volume")
	if [[ "$result" == "" ]] ; then
		continue="false"
	else
		sleep 3;
	fi
done;
	
