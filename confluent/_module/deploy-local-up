#!/usr/bin/env bash

prefix="vcw_module_hkvb_poc_confluent__$1"
prefix="vcw_module_hkvb_poc_confluent__$1"

if [[ "vcw_module_hkvb_poc_confluent__connect_secrets_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create vcw_module_hkvb_poc_confluent__connect_secrets_volume
fi

if [[ "vcw_module_hkvb_poc_confluent__connect_connect_secrets_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create vcw_module_hkvb_poc_confluent__connect_connect_secrets_volume
fi

if [[ "vcw_module_hkvb_poc_confluent__connect_data_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create vcw_module_hkvb_poc_confluent__connect_data_volume
fi

if [[ "vcw_module_hkvb_poc_confluent__connect_jars_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create vcw_module_hkvb_poc_confluent__connect_jars_volume
fi

if [[ "vcw_module_hkvb_poc_confluent__kafka_secrets_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create vcw_module_hkvb_poc_confluent__kafka_secrets_volume
fi

if [[ "vcw_module_hkvb_poc_confluent__kafka_data_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create vcw_module_hkvb_poc_confluent__kafka_data_volume
fi

if [[ "vcw_module_hkvb_poc_confluent__ksqldb_queries_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create vcw_module_hkvb_poc_confluent__ksqldb_queries_volume
fi

if [[ "vcw_module_hkvb_poc_confluent__schema_registry_secrets_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create vcw_module_hkvb_poc_confluent__schema_registry_secrets_volume
fi

if [[ "vcw_module_hkvb_poc_confluent__zookeeper_secrets_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create vcw_module_hkvb_poc_confluent__zookeeper_secrets_volume
fi

if [[ "vcw_module_hkvb_poc_confluent__zookeeper_data_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create vcw_module_hkvb_poc_confluent__zookeeper_data_volume
fi

if [[ "vcw_module_hkvb_poc_confluent__zookeeper_log_volume" == "$prefix"* ]] ; then
	executionplane --silent docker volume create vcw_module_hkvb_poc_confluent__zookeeper_log_volume
fi

if [[ "vcw_module_hkvb_poc_confluent__kafka_data_volume" == "$prefix"* ]] ; then
	executionplane --silent docker run -v vcw_infometis_repos:/source -v vcw_module_hkvb_poc_confluent__kafka_data_volume:/var/lib/kafka/data ${VCW_REGISTRY}hkvb/infometis console cmd cp -r /source/hkvb/poc/confluent/_module/volumes/kafka_data_volume/* /var/lib/kafka/data
fi

if [[ "vcw_module_hkvb_poc_confluent__ksqldb_queries_volume" == "$prefix"* ]] ; then
	executionplane --silent docker run -v vcw_infometis_repos:/source -v vcw_module_hkvb_poc_confluent__ksqldb_queries_volume:/vcw/pwd ${VCW_REGISTRY}hkvb/infometis console untar /source/hkvb/poc/confluent/_module/volumes/ksqldb_queries_volume.tar
fi
